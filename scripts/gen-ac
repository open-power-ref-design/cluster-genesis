# Copyright 2018 IBM Corp.
#
# All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

_gen()
{
    local cur prev opts
    COMPREPLY=()
    cur="${COMP_WORDS[COMP_CWORD]}"
    prev="${COMP_WORDS[COMP_CWORD-1]}"
    prev_2="${COMP_WORDS[COMP_CWORD-2]}"
    prev_3="${COMP_WORDS[COMP_CWORD-3]}"

    opts="-h --help --bridges --gateway -a --all -f -p"

    if [[ ${cur} == * ]] && [[ ${prev} == setup ]]; then
        COMPREPLY=( $(compgen -W "${opts}" -- ${cur}) )
        return 0
    fi

    opts="-h --help --create-container --mgmt-switches --data-switches "
    opts+="-a --all -f -p"

    if [[ ${cur} == * ]] && [[ ${prev} == config ]]; then
        COMPREPLY=( $(compgen -W "${opts}" -- ${cur}) )
        return 0
    fi

    opts="-h --help --config-file --cluster-hardware -a --all -f -p"

    if [[ ${cur} == * ]] && [[ ${prev} == validate ]]; then
        COMPREPLY=( $(compgen -W "${opts}" -- ${cur}) )
        return 0
    fi

    opts="-h --help --create-inventory --install-cobbler --download-os-images "
    opts+="--inv-add-ports-ipmi --inv-add-ports-pxe --add-cobbler-distros "
    opts+="--add-cobbler-systems --install-client-os --gather-mac-addr "
    opts+="-a --all -f -p"

    if [[ ${cur} == * ]] && [[ ${prev} == deploy ]]; then
        COMPREPLY=( $(compgen -W "${opts}" -- ${cur}) )
        return 0
    fi

    opts="setup config validate deploy post-deploy"

    if [[ ${cur} == * ]] && [[ ${prev} == gen ]]; then
        COMPREPLY=( $(compgen -W "${opts}" -- ${cur}) )
        return 0
    fi

    opts="nolog debug info warning error critical"

    if [[ ${cur} == * ]] && ([[ ${prev} == -p ]] || [[ ${prev} == -f ]] || \
        [[ ${prev} == --log-level-file ]] || \
        [[ ${prev} == --log-level-print ]]); then
        COMPREPLY=( $(compgen -W "${opts}" -- ${cur}) )
        return 0
    fi

    opts="-h --help -p --log-level-print -f --log-level-file"

    if [[ ${cur} == * ]] && ([[ ${prev_3} == gen ]] || \
        [[ ${prev} == post-deploy ]]); then
        COMPREPLY=( $(compgen -W "${opts}" -- ${cur}) )
        return 0
    fi

}

complete -F _gen gen
