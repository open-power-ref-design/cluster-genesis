# Copyright 2019 IBM Corp.
#
# All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

_teardown()
{
    local cur prev opts first second comm_opts sub_cmds pup_path array
    COMPREPLY=()
    cur="${COMP_WORDS[COMP_CWORD]}"
    first="${COMP_WORDS[0]}"
    second="${COMP_WORDS[1]}"

    if [[ $COMP_CWORD -ge 1  ]]; then
        prev="${COMP_WORDS[COMP_CWORD-1]}"
    fi

    pup_path=${PATH%%power-up*}
    pup_path=${pup_path##*:}power-up/

    cmd="teardown"
    sub_cmds="deployer switches all"
    comm_opts=" --help --all --log-level-file --log-level-print"

    if [[ ${prev} == "$cmd" ]] && [[ ${cur} == -* ]]; then
        COMPREPLY=( $(compgen -W "${comm_opts}" -- ${cur}) )
        return 0
    elif [[ ${prev} == "$cmd" ]]; then
        COMPREPLY=( $(compgen -W "${sub_cmds}" -- ${cur}) )
        return 0
    fi

    if ([[ " ${sub_cmds[@]} " =~ " ${second} " ]] || \
        [[ "${second}" == "--all" ]]); then
        if ([[ ${cur} != -* ]] && [[ ${prev} != *.yml ]]); then
            files=`ls "$pup_path"*.yml | sed -E 's/(.+)\///'`
            COMPREPLY=( $( compgen -W "${files[@]}" -- ${cur} ) )
            return 0
        fi
    fi

    if [[ ${prev} == deployer ]] && [[ ${cur} == -* ]]; then
        opts="--container --networks --gateway --all"
    elif [[ ${prev} == switches ]] && [[ ${cur} == -* ]]; then
        opts="--mgmt --data"
    elif [[ ${cur} == -* ]]; then
        opts+="$comm_opts"
    fi
    COMPREPLY=( $(compgen -W "${opts}" -- ${cur}) )

}

complete -F _teardown teardown
